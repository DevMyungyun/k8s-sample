apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka-broker
spec:
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
  selector:
    app: kafka-broker
  type: ClusterIP

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      # nodeSelector:
      #   servertype: analytics
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "192.168.4.1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181 # ,zoo2:2181,zoo3:2181 -> additional zookeeper
        - name: KAFKA_CREATE_TOPICS
          value: "test-topic:3:2:compact"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        - name: ALLOW_PLAINTEXT_LISTENER # OLNY FOR DEVELOPEMENT ENVIROMENT!
          value: "yes"
        volumeMounts:
          - name: kafka-volume
            mountPath: "/kafka/kafka-logs"
      volumes:
          - name: kafka-volume
            persistentVolumeClaim:
             claimName: kafka-volume-claim